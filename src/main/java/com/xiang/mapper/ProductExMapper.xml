<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiang.mapper.ProductExMapper">
  <resultMap id="BaseResultMap" type="com.xiang.bean.po.ProductEx">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="del" jdbcType="BIT" property="del" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="img_url_a" jdbcType="VARCHAR" property="imgUrlA" />
    <result column="img_url_b" jdbcType="VARCHAR" property="imgUrlB" />
    <result column="img_url_c" jdbcType="VARCHAR" property="imgUrlC" />
    <result column="keyword" jdbcType="VARCHAR" property="keyword" />
    <result column="description" jdbcType="VARCHAR" property="description" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.xiang.bean.po.ProductEx">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, del, add_time, img_url_a, img_url_b, img_url_c, keyword, description
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.xiang.bean.po.ProductExExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from product_ex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.xiang.bean.po.ProductExExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product_ex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="com.xiang.bean.po.ProductExExample" resultType="java.lang.Long">
    select count(*) from product_ex
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update product_ex
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.del != null">
        del = #{record.del,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.imgUrlA != null">
        img_url_a = #{record.imgUrlA,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrlB != null">
        img_url_b = #{record.imgUrlB,jdbcType=VARCHAR},
      </if>
      <if test="record.imgUrlC != null">
        img_url_c = #{record.imgUrlC,jdbcType=VARCHAR},
      </if>
      <if test="record.keyword != null">
        keyword = #{record.keyword,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update product_ex
    set id = #{record.id,jdbcType=BIGINT},
      del = #{record.del,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      img_url_a = #{record.imgUrlA,jdbcType=VARCHAR},
      img_url_b = #{record.imgUrlB,jdbcType=VARCHAR},
      img_url_c = #{record.imgUrlC,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update product_ex
    set id = #{record.id,jdbcType=BIGINT},
      del = #{record.del,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      img_url_a = #{record.imgUrlA,jdbcType=VARCHAR},
      img_url_b = #{record.imgUrlB,jdbcType=VARCHAR},
      img_url_c = #{record.imgUrlC,jdbcType=VARCHAR},
      keyword = #{record.keyword,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiang.bean.po.ProductEx">
    update product_ex
    <set>
      <if test="del != null">
        del = #{del,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imgUrlA != null">
        img_url_a = #{imgUrlA,jdbcType=VARCHAR},
      </if>
      <if test="imgUrlB != null">
        img_url_b = #{imgUrlB,jdbcType=VARCHAR},
      </if>
      <if test="imgUrlC != null">
        img_url_c = #{imgUrlC,jdbcType=VARCHAR},
      </if>
      <if test="keyword != null">
        keyword = #{keyword,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>